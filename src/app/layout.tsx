import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Navbar } from "@/app/shared/components/navbar/Navbar";
import { Table } from "@/app/shared/components/tables/Table";
import { fetchPokemons } from "@/app/shared/components/tables/service";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// ðŸ‘‡ `RootLayout` ahora es asÃ­ncrono para poder usar `fetchPokemons`
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const data = await fetchPokemons(1000, 1); // Llamada a la API en el servidor

  return (
    <html lang="en">
      <Navbar/>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Table data={data.results} /> {/* Pasamos solo los resultados */}
      </body>
    </html>
  );
}
